package {{packageName}}

import _root_.argonaut._, Argonaut._
import {{packageName}}._
{{#imports}}//import {{import}}
{{/imports}}

// TODO: properly handle custom imports
import java.io._
import java.util.Date

{{#models}}
{{#model}}
/**
 * {{{description}}}
{{#vars}}
 * @param {{name}} {{{description}}}
{{/vars}}
 */
case class {{classname}}({{#vars}}{{name}}: {{^required}}Option[{{{datatype}}}]{{/required}}{{#required}}{{{datatype}}}{{/required}}{{^-last}},{{/-last}}
                {{/vars}})

object {{classname}} {
  /**
   * Creates the codec for converting {{classname}} from and to JSON.
   */
  implicit val {{classname}}Codec: CodecJson[{{classname}}] = casecodec{{#vendorExtensions.x-varcount}}{{vendorExtensions.x-varcount}}{{/vendorExtensions.x-varcount}}({{classname}}.apply, {{classname}}.unapply)({{#vars}}"{{baseName}}"{{^-last}}, {{/-last}}{{/vars}})
}
{{/model}}
{{/models}}
